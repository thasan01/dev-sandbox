# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

variables:
  - group: testapp-dev

trigger:
  - master

pool:
  vmImage: ubuntu-latest

steps:
  - task: Maven@3
    inputs:
      mavenPomFile: '$(system.defaultWorkingDirectory)/azure-function/pom.xml'
      mavenOptions: "-Xmx3072m -Dazure.functions.appName=$(azAppName) -Dazure.functions.resourceGroup=$(azResourceGroup) -Dazure.functions.appServicePlanName=$(azAppServicePlanName) -Dazure.functions.region=$(azRegion)"
      javaHomeOption: "JDKVersion"
      jdkVersionOption: "1.11"
      jdkArchitectureOption: "x64"
      publishJUnitResults: true
      testResultsFiles: "**/surefire-reports/TEST-*.xml"
      goals: "package"

  # Copy files
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**/azure-functions/**'
      TargetFolder: '$(build.artifactstagingdirectory)'


# Create Archive : zip file
  - task: ArchiveFiles@2
    displayName: 'Archive $(build.artifactstagingdirectory)/azure-function/target/azure-functions/$(azAppName)'
    inputs:
      rootFolderOrFile: '$(build.artifactstagingdirectory)/azure-function/target/azure-functions/$(azAppName)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: AzureFunctionApp@2
    inputs:
      azureSubscription: '$(azServiceConnection)'
      appType: 'functionApp'
      appName: '$(azAppName)'
      package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
      deploymentMethod: 'auto'
